generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("NEXT_PUBLIC_MONGOOSE_URL")
}

model users {
    id         String   @id @default(auto()) @map("_id") @db.ObjectId
    name       String
    email      String   @unique
    password   String
    isAdmin    Boolean  @default(false)
    isBanned   Boolean  @default(false)
    isVerified Boolean  @default(false)
    createdAt  DateTime @default(now())
    updatedAt  DateTime @updatedAt
}

model products {
    id          String     @id @default(auto()) @map("_id") @db.ObjectId
    title       String     @unique
    newPrice    Float
    oldPrice    Float?
    slug        String     @unique
    categoryId  String     @db.ObjectId
    category    categories @relation(fields: [categoryId], references: [id])
    description String
    quantity    Int
    shipping    String
    image       String
    createdAt   DateTime   @default(now())
    updatedAt   DateTime   @updatedAt
    colors      colors[]
    sizes       sizes[]
}

model categories {
    id            String          @id @default(auto()) @map("_id") @db.ObjectId
    name          String          @unique
    slug          String          @unique
    image         String
    products      products[]
    subCategories subCategories[]
    createdAt     DateTime        @default(now())
    updatedAt     DateTime        @updatedAt
}

model subCategories {
    id               String     @id @default(auto()) @map("_id") @db.ObjectId
    parentCategoryId String     @db.ObjectId
    parentCategory   categories @relation(fields: [parentCategoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
    name             String     @unique
    slug             String     @unique
    image            String
    createdAt        DateTime   @default(now())
    updatedAt        DateTime   @updatedAt
}

model colors {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    name      String
    code      String    @unique
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    productId String?   @db.ObjectId
    products  products? @relation(fields: [productId], references: [id])
}

model sizes {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    name      String    @unique
    slug      String    @unique
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    productId String?   @db.ObjectId
    products  products? @relation(fields: [productId], references: [id])
}
